package GUI.Classes;

import Dao.Proceso;
import Dao.Simulator;
import Estructura.Cola;
import Estructura.Lista;
import Estructura.Nodo;
import javax.swing.DefaultListModel;
import javax.swing.SwingUtilities;

/**
 *
 * @author Dilan891
 */
public class Ejecucion extends javax.swing.JFrame {

    Simulator simulator;

    /**
     * Creates new form Ejecución
     */
    public Ejecucion() {
        initComponents();
    }

    public Ejecucion(Simulator simulator) {
        initComponents();
        //Carga las listas
        this.actualizarJListConCola(simulator.getListos(), ColaListos);
        this.actualizarJListConCola(simulator.getBloqueados(), ColaBloqueados); //wuu
        this.actualizarCPUs(this.CpuList, simulator);
        simulator.setVentana(this);
        this.simulator = simulator;
    }

    public Simulator getSimulator() {
        return this.simulator;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ColaBloqueados = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        CpuList = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ColaListos = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ColaBloqueados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(ColaBloqueados);

        jLabel2.setText("Bloqueados");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("En Ejecución");

        CpuList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(CpuList);

        jButton2.setText("mover a block");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("mover a listos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Ejecutar FCFS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        ColaListos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(ColaListos);

        jLabel1.setText("Listos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(171, 171, 171)
                                    .addComponent(jButton4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(75, 75, 75))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(109, 109, 109)))))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton5)
                                    .addGap(208, 208, 208))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(68, 68, 68))))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jButton5)))
                        .addGap(62, 62, 62))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton4))
                        .addGap(43, 43, 43)))
                .addComponent(jButton1)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println("se va a desencolar");
        actualizarJListConCola(simulator.getListos(), ColaListos);

    }//GEN-LAST:event_jButton1ActionPerformed

    //Mueve de la cola de listos a la cola de bloqueaods
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        simulator.moverListosABloqueados();
        actualizarJListConCola(simulator.getListos(), ColaListos);
        actualizarJListConCola(simulator.getBloqueados(), ColaBloqueados);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.simulator.moverBloqueadosAListos();
        actualizarJListConCola(simulator.getListos(), ColaListos);
        actualizarJListConCola(simulator.getBloqueados(), ColaBloqueados);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        System.out.println("Se estan ejecutando los procesos uwu onichan yamete kudasai");
        // Toma de la lista de listos y ejecuta segun el numero de nucleos
        simulator.ejecutarProcesos(this);
    }//GEN-LAST:event_jButton5ActionPerformed

    public void actualizarJListConCola(Cola<Proceso> cola, javax.swing.JList<String> jList) {
        // Crear un modelo de lista vacío
        DefaultListModel<String> modelo = new DefaultListModel<>();

        // Recorrer la cola y agregar cada elemento al modelo
        for (Proceso proceso : cola) {
            modelo.addElement(proceso.getName()); // Convertir a String y agregar al modelo
        }

        // Asignar el modelo al JList
        jList.setModel(modelo);
    }

    public void moverListosACpus() {
        

    }
    
    public void actualizarColaBloqueados(){
        actualizarJListConCola(simulator.getBloqueados(), ColaBloqueados);
    }
    
    public void actualizacionColaListos(){
         actualizarJListConCola(simulator.getListos(), ColaListos);
    }

    //Toma la lista de cpus y la actualiza la lista de cpus del GUI en base a esa, tomando los nombres de los procesos
    public void actualizarCPUsPorList(javax.swing.JList<String> jList, Simulator simulator, Lista<Nodo> cpus) {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        Nodo pointer = (Nodo) cpus.getHead();
        int coreNum = 0;
        while (pointer != null) {
            Proceso proceso = (Proceso) pointer.getElement();
            if(proceso == null){
                continue;
            }
            modelo.addElement(proceso.getName()
                    + " id: " + proceso.getProcessID()
                    + " status: " + proceso.getStatus()
            );
            pointer = (Nodo) pointer.getNext();
            coreNum++;
        }
        jList.setModel(modelo);
    }
 
   public void actualizarEstadoPorID(int processID, String nuevoEstado, Simulator simulator) {
        SwingUtilities.invokeLater(() -> { // Ejecuta la actualización en el hilo de la UI
            Nodo pointer = (Nodo) simulator.getCpus().getHead();
            DefaultListModel<String> modelo = (DefaultListModel<String>) CpuList.getModel();
            //System.out.println("Actualizando estado");

            while (pointer != null) {
                Proceso proceso = (Proceso) pointer.getElement();
                if(proceso == null){
                    continue;
                }
                // Buscamos el proceso por ID
                if (proceso.getProcessID() == processID) {
                    // Volvemos a reconstruir el modelo de la lista para reflejar el cambio
                    modelo.clear();
                    Nodo pointerRefresh = (Nodo) simulator.getCpus().getHead();
                    while (pointerRefresh != null) {
                        Proceso procesoRefresh = (Proceso) pointerRefresh.getElement();
                        modelo.addElement(procesoRefresh.getName()
                                + " id: " + procesoRefresh.getProcessID()
                                + " status: " + procesoRefresh.getStatus());
                        pointerRefresh = (Nodo) pointerRefresh.getNext();
                    }
                    break;
                }
                pointer = (Nodo) pointer.getNext();
            }

            // Actualizamos el modelo de la lista en la interfaz
            CpuList.setModel(modelo);
        });
    }

    public void actualizarCPUs(javax.swing.JList<String> jList, Simulator simulator) {
        int nCores = simulator.getConfiguracion().getNumCores();
        System.out.println("numero de nucleos: " + nCores);
        //Crea la lista con el numero de nucleos definido
        simulator.createDeafultCpus(nCores);

        DefaultListModel<String> modelo = new DefaultListModel<>();
        for (int i = 0; i < nCores; i++) {
            modelo.addElement("core " + (i + 1) + ": N/A");
        }

        jList.setModel(modelo);
    }

    public javax.swing.JList<String> getListaCpu() {
        return CpuList;
    }

    public javax.swing.JList<String> getColaListos() {
        return ColaListos;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ColaBloqueados;
    private javax.swing.JList<String> ColaListos;
    private javax.swing.JList<String> CpuList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}

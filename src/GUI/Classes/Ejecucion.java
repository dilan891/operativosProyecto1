package GUI.Classes;

import Dao.AutoId;
import Dao.Proceso;
import Dao.Simulator;
import Estructura.Cola;
import Estructura.Lista;
import Estructura.Nodo;
import javax.swing.DefaultListModel;
import javax.swing.SwingUtilities;

/**
 *
 * @author Dilan891
 */
public class Ejecucion extends javax.swing.JFrame {

    Simulator simulator;
    String planificationType = "";

    /**
     * Creates new form Ejecución
     */
    public Ejecucion() {
        initComponents();
    }

    public Ejecucion(Simulator simulator) {
        initComponents();
        //Carga las listas
        this.actualizarJListConCola(simulator.getListos(), ColaListos);
        this.actualizarJListConCola(simulator.getBloqueados(), ColaBloqueados); //wuu
        this.actualizarCPUs(this.CpuList, simulator);
        simulator.setVentana(this);
        this.simulator = simulator;
    }

    public Simulator getSimulator() {
        return this.simulator;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ColaBloqueados = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        CpuList = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ColaListos = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        numeroCiclos = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tipoPlanificacion = new javax.swing.JLabel();
        ConfigPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        SatifactionCycle = new javax.swing.JTextField();
        exeptionCycle = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ColaBloqueados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(ColaBloqueados);

        jLabel2.setText("Bloqueados");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        jLabel3.setText("Historial de ejecución");

        CpuList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(CpuList);

        jButton5.setText("Ejecutar con FCFS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        ColaListos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(ColaListos);

        jLabel1.setText("Listos");

        jLabel4.setText("Número de ciclos transcurridos: ");

        numeroCiclos.setText("0");

        jLabel5.setText("Tipo de planifiación:");

        jButton1.setText("Añadir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Nombre:");

        jLabel7.setText("Cantidad Instrucciones:");

        jRadioButton1.setText("cpu_bound");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("io_bound");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Tipo");

        SatifactionCycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SatifactionCycleActionPerformed(evt);
            }
        });

        jLabel10.setText("ciclos de exepción:");

        jLabel11.setText("ciclos de satisfacción:");

        javax.swing.GroupLayout ConfigPanelLayout = new javax.swing.GroupLayout(ConfigPanel);
        ConfigPanel.setLayout(ConfigPanelLayout);
        ConfigPanelLayout.setHorizontalGroup(
            ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfigPanelLayout.createSequentialGroup()
                .addGroup(ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConfigPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ConfigPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ConfigPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addComponent(jLabel8)
                        .addGap(30, 30, 30)
                        .addGroup(ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton1))
                        .addGap(44, 44, 44)
                        .addGroup(ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(33, 33, 33)
                        .addGroup(ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SatifactionCycle, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exeptionCycle, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ConfigPanelLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jButton1)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        ConfigPanelLayout.setVerticalGroup(
            ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfigPanelLayout.createSequentialGroup()
                .addGroup(ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConfigPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jRadioButton1)
                            .addComponent(jLabel11)
                            .addComponent(SatifactionCycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jRadioButton2)
                            .addComponent(exeptionCycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addGroup(ConfigPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel1)
                        .addGap(109, 109, 109))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(60, 60, 60)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(numeroCiclos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ConfigPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(91, 91, 91))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(tipoPlanificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(numeroCiclos))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(tipoPlanificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(ConfigPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jButton5)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        System.out.println("Se estan ejecutando los procesos uwu onichan yamete kudasai");
        // Toma de la lista de listos y ejecuta segun el numero de nucleos
        simulator.ejecutarProcesos(this);
        iniciarContadorCiclos(simulator.getConfiguracion().getCycleDuration());
        this.planificationType = "FCFS";
        tipoPlanificacion.setText("FCFS");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Proceso proceso = new Proceso();
        proceso.setName(jTextField1.getText());
        proceso.setInstructionCant(Integer.parseInt(jTextField2.getText()));
        proceso.setVentana(this);
        //Genera el id
        //proceso.setProcessID(AutoId.generateID());
        if (jRadioButton1.isSelected()) {
            proceso.setType("cpu_bound");
        } else {
            proceso.setType("io_bound");
        }
        if (proceso.getType() == "io_bound") {
            proceso.setCyclesSatifaction(Integer.parseInt(SatifactionCycle.getText()));
            proceso.setCyclesExeption(Integer.parseInt(exeptionCycle.getText()));
        }
        switch (this.planificationType) {
            case "FCFS":
                //Añade a la ultima posición
                simulator.getListos().encolar(proceso);
                break;
        
            default:
                //Añade a la ultima posición por defecto
                simulator.getListos().encolar(proceso);
                break;
        }
        //Actualiza la cola de listos
        this.actualizacionColaListos();
        
        //Limpia los campos
        jTextField1.setText("");
        jTextField2.setText("");
        SatifactionCycle.setText("");
        exeptionCycle.setText("");
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void SatifactionCycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SatifactionCycleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SatifactionCycleActionPerformed

    public void actualizarJListConCola(Cola<Proceso> cola, javax.swing.JList<String> jList) {
        // Crear un modelo de lista vacío
        DefaultListModel<String> modelo = new DefaultListModel<>();

        // Recorrer la cola y agregar cada elemento al modelo
        for (Proceso proceso : cola) {
            modelo.addElement(proceso.getName()); // Convertir a String y agregar al modelo
        }

        // Asignar el modelo al JList
        jList.setModel(modelo);
    }

    //Inicia un cantador segun la velocidad que se le pase y se actualiza en la interfaz grafica el label de numero de ciclos
    public void iniciarContadorCiclos(int velocidad) {
        Thread contador = new Thread(new Runnable() {
            @Override
            public void run() {
                int ciclos = 0;
                while (true) {
                    try {
                        Thread.sleep(velocidad);
                        ciclos++;
                        numeroCiclos.setText(Integer.toString(ciclos));
                    } catch (InterruptedException ex) {
                        System.out.println("Error en el contador de ciclos");
                    }
                }
            }
        });
        contador.start();
    }

    public void actualizarColaBloqueados() {
        actualizarJListConCola(simulator.getBloqueados(), ColaBloqueados);
    }

    public void actualizacionColaListos() {
        actualizarJListConCola(simulator.getListos(), ColaListos);
    }

    //Toma la lista de cpus y la actualiza la lista de cpus del GUI en base a esa, tomando los nombres de los procesos
    public void actualizarCPUsPorList(javax.swing.JList<String> jList, Simulator simulator, Lista<Nodo> cpus) {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        Nodo pointer = (Nodo) cpus.getHead();
        int coreNum = 0;
        while (pointer != null) {
            Proceso proceso = (Proceso) pointer.getElement();
            if (proceso == null) {
                continue;
            }
            modelo.addElement(proceso.getName()
                    + " id: " + proceso.getProcessID()
                    + " status: " + proceso.getStatus()
            );
            pointer = (Nodo) pointer.getNext();
            coreNum++;
        }
        jList.setModel(modelo);
    }

    public void actualizarEstadoPorID(int processID, String nuevoEstado, Simulator simulator) {
        SwingUtilities.invokeLater(() -> { // Ejecuta la actualización en el hilo de la UI
            Nodo pointer = (Nodo) simulator.getCpus().getHead();
            DefaultListModel<String> modelo = (DefaultListModel<String>) CpuList.getModel();
            //System.out.println("Actualizando estado");

            while (pointer != null) {
                Proceso proceso = (Proceso) pointer.getElement();
                if (proceso == null) {
                    continue;
                }
                // Buscamos el proceso por ID
                if (proceso.getProcessID() == processID) {
                    // Volvemos a reconstruir el modelo de la lista para reflejar el cambio
                    modelo.clear();
                    Nodo pointerRefresh = (Nodo) simulator.getCpus().getHead();
                    while (pointerRefresh != null) {
                        Proceso procesoRefresh = (Proceso) pointerRefresh.getElement();
                        modelo.addElement(procesoRefresh.getName()
                                + " id: " + procesoRefresh.getProcessID()
                                + " status: " + procesoRefresh.getStatus());
                        pointerRefresh = (Nodo) pointerRefresh.getNext();
                    }
                    break;
                }
                pointer = (Nodo) pointer.getNext();
            }

            // Actualizamos el modelo de la lista en la interfaz
            CpuList.setModel(modelo);
        });
    }

    public void actualizarCPUs(javax.swing.JList<String> jList, Simulator simulator) {
        int nCores = simulator.getConfiguracion().getNumCores();
        System.out.println("numero de nucleos: " + nCores);
        //Crea la lista con el numero de nucleos definido
        simulator.createDeafultCpus(nCores);

        DefaultListModel<String> modelo = new DefaultListModel<>();
        for (int i = 0; i < nCores; i++) {
            modelo.addElement("core " + (i + 1) + ": N/A");
        }

        jList.setModel(modelo);
    }

    public javax.swing.JList<String> getListaCpu() {
        return CpuList;
    }

    public javax.swing.JList<String> getColaListos() {
        return ColaListos;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ColaBloqueados;
    private javax.swing.JList<String> ColaListos;
    private javax.swing.JPanel ConfigPanel;
    private javax.swing.JList<String> CpuList;
    private javax.swing.JTextField SatifactionCycle;
    private javax.swing.JTextField exeptionCycle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel numeroCiclos;
    private javax.swing.JLabel tipoPlanificacion;
    // End of variables declaration//GEN-END:variables
}
